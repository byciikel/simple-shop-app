{"version":3,"sources":["store/Store.js","components/Header.js","components/Card.js","pages/HomePage.js","components/LongCard.js","pages/CheckoutPage.js","router/AppRouter.js","serviceWorker.js","index.js"],"names":["Store","products","cart","product","this","fetch","productData","json","chunkProducts","_","chunk","setProduct","action","indexOfCart","findIndex","id","pullAt","decorate","observable","listProduct","setCart","newStore","LeftMenu","hasBackButton","backUrl","to","className","color","Header","props","length","fontSize","Card","onEvent","sumItem","countBy","itemName","Object","getOwnPropertyNames","map","name","index","toString","key","title","onClick","observer","useState","countProduct","setCountProduct","productList","setProductLIst","isMore","toggleMore","useEffect","dataLength","next","nextProduct","concat","hasMore","loader","endMessage","handleEvent","LongCard","CheckOrder","groupByItem","groupBy","item","fetchProduct","exact","path","component","HomePage","CheckoutPage","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bd55aeec.chunk.js","sourcesContent":["import { decorate, action, observable } from 'mobx'\nimport _ from 'lodash'\n\nclass Store {\n  products = []\n\n  setProduct(product) {\n    this.products = product\n  }\n\n  async fetchProduct() {\n    const url = 'https://jsonplaceholder.typicode.com/todos'\n    const productData = await fetch(url)\n    const products = await productData.json()\n    const chunkProducts = _.chunk(products, 9)\n    this.setProduct(chunkProducts)\n  }\n\n  cart = []\n\n  setCart(action, product) {\n    switch (action) {\n      case 'increment':\n        this.cart = [...this.cart, product]\n        break\n      case 'decrement':\n        let indexOfCart = _.findIndex(this.cart, { 'id': product.id })\n        _.pullAt(this.cart, [indexOfCart])\n        this.cart = [...this.cart]\n        break\n      case 'reset':\n        this.cart = product\n        break\n      default: break\n    }\n  }\n}\n\ndecorate(Store, {\n  products: observable,\n  listProduct: observable,\n  cart: observable,\n  setCart: action\n})\n\nconst newStore = new Store()\n\nexport default newStore\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport MdPricetags from 'react-ionicons/lib/MdPricetags'\nimport IosCart from 'react-ionicons/lib/IosCart'\nimport MdArrowRoundBack from 'react-ionicons/lib/MdArrowRoundBack'\n\nconst LeftMenu = ({ hasBackButton, backUrl }) => {\n  if (hasBackButton) {\n    return (\n      <Link to={ backUrl } className=\"flex items-center flex-shrink-0 text-white mr-6\">\n        <MdArrowRoundBack color=\"#FFF\" className=\"mr-3\" />\n        <span className=\"font-semibold text-xl tracking-tight\">Back</span>\n      </Link>\n    )\n  } else {\n    return (\n      <div className=\"flex items-center flex-shrink-0 text-white mr-6\">\n        <MdPricetags color=\"#FFF\" className=\"mr-3\" />\n        <span className=\"font-semibold text-xl tracking-tight\">Simple Shop</span>\n      </div>\n    )\n  }\n}\n\nconst Header = (props) => {\n  return (\n    <nav className=\"flex justify-center bg-teal-500 p-6\">\n      <div className=\"w-3/4 flex flex-wrap justify-between items-center\">\n        <LeftMenu { ...props } />\n        <Link to=\"/checkout\">\n          <div className=\"absolute -mt-3 ml-4 px-3 py-1 bg-red-500 rounded-full text-sm text-white\">\n            { props.cart.length }\n          </div>\n          <IosCart color=\"#FFF\" fontSize=\"2em\" />\n        </Link>\n      </div>\n    </nav>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport _ from 'lodash'\n\nconst Card = ({ product, onEvent, cart }) => {\n  const sumItem = _.countBy(cart, 'id')\n  const itemName = Object.getOwnPropertyNames(sumItem)\n\n  return (\n    <div className=\"md:w-1/2 lg:w-1/3 py-4 px-4\" >\n      <div className=\"bg-white relative shadow p-2 rounded-lg text-gray-800 hover:shadow-lg\">\n        {itemName.map((name, index) => product.id.toString() === name ?\n          <div key={ index } className=\"absolute mt-4 rounded-r-full text-center font-bold text-xs text-white px-2 py-1 bg-orange-500\">\n            { sumItem[name] } Item(s)\n          </div>\n        : \n          <div key={ index } /> \n        )}\n        <div className=\"h-32 rounded-lg w-full bg-gray-300 flex items-center justify-center text-gray-600\">\n          No Image Available\n        </div>\n        <div className=\"py-2 px-2\">\n          <div className=\" font-bold font-title text-center\">{ product.title }</div>\n        </div>\n        <div className=\"custom-number-input h-10 w-full\">\n          <div className=\"flex flex-row h-10 w-full rounded-lg justify-between\">\n            <button onClick={() => onEvent('decrement', product)} className=\"bg-transparent hover:bg-red-500 text-red-500 hover:text-white h-full px-3 rounded-lg cursor-pointer outline-none focus:outline-none mr-2 border border-red-500\">\n              <span className=\"text-md font-semibold\">âˆ’</span>\n            </button>\n            <Link\n              to=\"/checkout\"\n              className=\"bg-transparent hover:bg-blue-400 text-blue-400 hover:text-white h-full rounded-lg cursor-pointer outline-none focus:outline-none border border-blue-400 px-3 flex justify-center items-center\">\n              <span className=\"text-md font-semibold\">CHECKOUT</span>\n            </Link>\n            <button onClick={() => onEvent('increment', product)} className=\"bg-transparent hover:bg-teal-500 text-teal-500 hover:text-white h-full px-3 rounded-lg cursor-pointer outline-none focus:outline-none ml-2 border border-teal-500\">\n              <span className=\"text-md font-semibold\">+</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Card\n","import React, { useState, useEffect } from 'react'\nimport { observer } from 'mobx-react'\nimport InfiniteScroll from \"react-infinite-scroll-component\"\n\nimport Store from '../store/Store'\n\nimport Header from '../components/Header'\nimport Card from '../components/Card'\n\nconst HomePage = () => {\n  const [countProduct, setCountProduct] = useState(1)\n  const [productList, setProductLIst] = useState([])\n  const [isMore, toggleMore] = useState(true)\n  const product = Store.products[0]\n\n  useEffect(() => {\n    setProductLIst(product)\n  }, [product])\n\n  const fetchMoreData = () => {\n    if (Store.products[countProduct]) {\n      let nextProduct = productList.concat(Store.products[countProduct])\n      setProductLIst(nextProduct)\n      setCountProduct(countProduct + 1)\n    } else {\n      toggleMore(false)\n    }\n  }\n\n  const handleEvent = (action, product) => {\n    Store.setCart(action, product)\n  }\n\n  return (\n    <div>\n      <Header hasBackButton={ false } cart={ Store.cart } />\n      {productList ? \n        <InfiniteScroll\n          dataLength={productList.length}\n          next={fetchMoreData}\n          hasMore={isMore}\n          loader={\n            <p className=\"text-center m-10\">\n              <b>Loading...</b>\n            </p>\n          }\n          endMessage={\n            <p className=\"text-center m-10\">\n              <b>All product has showed!</b>\n            </p>\n          }\n        >\n          <div className=\"sm:w-full md:w-3/4 flex flex-wrap justify-center md:justify-start mx-auto my-0\">\n            {productList.map((product, index) => (\n              <Card\n                key={ index }\n                product={ product }\n                onEvent={(action, product) => handleEvent(action, product)}\n                cart={ Store.cart }\n              />\n            ))}\n          </div>\n        </InfiniteScroll>\n      :\n        <div/>\n      }\n    </div>\n  )\n}\n\nexport default observer(HomePage)\n","import React from 'react'\n\nconst LongCard = ({ itemName, product, cart }) => {\n  return (\n    <div className=\"w-full lg:flex shadow rounded-lg border border-gray-400 my-4\">\n      <div className=\"w-full px-1 bg-white py-5 lg:px-2 lg:py-2 tracking-wide\">\n        <div className=\"flex flex-row lg:justify-start justify-center\">\n          <div className=\"text-gray-700 font-medium text-sm text-center lg:text-left px-2\">\n            Product Name :\n          </div>\n        </div>\n        {product[itemName][0].id.toString() === itemName ?\n          <div className=\"font-semibold text-gray-800 text-xl text-center lg:text-left px-2\">\n            { product[itemName][0].title }\n          </div>\n        :\n          <div />\n        }\n      </div>\n      <div className=\"flex flex-row items-center w-full lg:w-1/3 bg-white lg:justify-end justify-center px-2 py-4 lg:px-0\">\n        {product[itemName][0].id.toString() === itemName ?\n          <span className=\"tracking-wider text-gray-600 bg-gray-200 px-2 text-sm rounded leading-loose mx-2 font-semibold\">\n            Qty: { cart[itemName] }\n          </span>\n        :\n          <div />\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default LongCard\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { Link } from 'react-router-dom'\nimport _ from 'lodash'\n\nimport Store from '../store/Store'\n\nimport Header from '../components/Header'\nimport LongCard from '../components/LongCard'\n\nconst CheckOrder = () => {\n  const sumItem = _.countBy(Store.cart, 'id')\n  const groupByItem = _.groupBy(Store.cart, 'id')\n  const itemName = Object.getOwnPropertyNames(sumItem)\n\n  const onBuyProduct = () => {\n    Store.setCart('reset', [])\n  }\n\n  if (Store.cart.length !== 0) {\n    return (\n      <div>\n        <h2 className=\"text-center mt-10 mb-6 text-2xl\">\n          <b>Checkout Product List</b>\n        </h2>\n        <div className=\"w-1/2 flex flex-wrap justify-center mx-auto my-0\">\n          {itemName.map((item, index) => (\n            <LongCard\n              key={ index }\n              itemName={ item }\n              product={ groupByItem }\n              cart={ sumItem }\n            />\n          ))}\n        </div>\n        <div className=\"flex justify-between items-center flex-wrap w-1/2 mx-auto my-10 h-10\">\n          <Link\n            to=\"/\"\n            onClick={onBuyProduct}\n            className=\"bg-transparent hover:bg-teal-500 text-teal-500 hover:text-white rounded-lg cursor-pointer outline-none focus:outline-none border border-teal-500 h-full p-3 flex items-center\">\n            <span className=\"text-md font-semibold\">Buy Now</span>\n          </Link>\n          <p>\n            <b>Total Qty: { Store.cart.length }</b>\n          </p>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        <h2 className=\"text-center mt-10 text-2xl\">\n          <b>No Product Added!</b>\n        </h2>\n      </div>\n    )\n  }\n}\n\nconst CheckoutPage = () => {\n  return (\n    <div>\n      <Header hasBackButton={ true } backUrl=\"/\" cart={ Store.cart } />\n      <CheckOrder />\n    </div>\n  )\n}\n\nexport default observer(CheckoutPage)\n","import React, { useEffect } from 'react'\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport { observer } from 'mobx-react'\n\nimport Store from '../store/Store'\n\nimport HomePage from '../pages/HomePage'\nimport CheckoutPage from '../pages/CheckoutPage'\n\nconst AppRouter = () => {\n  useEffect(() => {\n    Store.fetchProduct()\n  }, [])\n\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\" component={ HomePage } />\n        <Route exact path=\"/checkout\" component={ CheckoutPage } />\n      </Switch>\n    </HashRouter>\n  )\n}\n\nexport default observer(AppRouter)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppRouter from './router/AppRouter'\nimport * as serviceWorker from './serviceWorker';\n\nimport './css/tailwind.css'\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}